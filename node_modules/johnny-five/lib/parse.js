var parse = {
descprogress: {
  "1": [ 0x1, 0x1, 0x1, 0x1, 0x1, 0x1, 0x1, 0x1 ],
  "2": [ 0x3, 0x3, 0x3, 0x3, 0x3, 0x3, 0x3, 0x3 ],
  "3": [ 0x7, 0x7, 0x7, 0x7, 0x7, 0x7, 0x7, 0x7 ],
  "4": [ 0xf, 0xf, 0xf, 0xf, 0xf, 0xf, 0xf, 0xf ]
},
ascchart: {
  "1": [ 0x1f, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0 ],
  "2": [ 0x1f, 0x1f, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0 ],
  "3": [ 0x1f, 0x1f, 0x1f, 0x0, 0x0, 0x0, 0x0, 0x0 ],
  "4": [ 0x1f, 0x1f, 0x1f, 0x1f, 0x0, 0x0, 0x0, 0x0 ],
  "5": [ 0x1f, 0x1f, 0x1f, 0x1f, 0x1f, 0x0, 0x0, 0x0 ],
  "6": [ 0x1f, 0x1f, 0x1f, 0x1f, 0x1f, 0x1f, 0x0, 0x0 ],
  "7": [ 0x1f, 0x1f, 0x1f, 0x1f, 0x1f, 0x1f, 0x1f, 0x0 ] },
descchart: {
  "1": [ 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x1f ],
  "2": [ 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x1f, 0x1f ],
  "3": [ 0x0, 0x0, 0x0, 0x0, 0x0, 0x1f, 0x1f, 0x1f ],
  "4": [ 0x0, 0x0, 0x0, 0x0, 0x1f, 0x1f, 0x1f, 0x1f ],
  "5": [ 0x0, 0x0, 0x0, 0x1f, 0x1f, 0x1f, 0x1f, 0x1f ],
  "6": [ 0x0, 0x0, 0x1f, 0x1f, 0x1f, 0x1f, 0x1f, 0x1f ],
  "7": [ 0x0, 0x1f, 0x1f, 0x1f, 0x1f, 0x1f, 0x1f, 0x1f ]
},
borderleft: {
  "1": [ 0x1, 0x1, 0x1, 0x1, 0x1, 0x1, 0x1, 0x1 ],
  "2": [ 0x3, 0x2, 0x2, 0x2, 0x2, 0x2, 0x2, 0x3 ],
  "3": [ 0x7, 0x4, 0x4, 0x4, 0x4, 0x4, 0x4, 0x7 ],
  "4": [ 0xf, 0x8, 0x8, 0x8, 0x8, 0x8, 0x8, 0xf ],
  "5": [ 0x1f, 0x10, 0x10, 0x10, 0x10, 0x10, 0x10, 0x1f ] },
bordertopbottom: {
  "5": [ 0x1f, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x1f ]
},
borderright: {
  "1": [ 0x10, 0x10, 0x10, 0x10, 0x10, 0x10, 0x10, 0x10 ],
  "2": [ 0x18, 0x8, 0x8, 0x8, 0x8, 0x8, 0x8, 0x18 ],
  "3": [ 0x1c, 0x4, 0x4, 0x4, 0x4, 0x4, 0x4, 0x1c ],
  "4": [ 0x1e, 0x2, 0x2, 0x2, 0x2, 0x2, 0x2, 0x1e ],
  "5": [ 0x1f, 0x1, 0x1, 0x1, 0x1, 0x1, 0x1, 0x1f ]
},
box: {
  "1": [ 0x3, 0x3, 0x3, 0x0, 0x0, 0x0, 0x0 ],
  "2": [ 0x18, 0x18, 0x18, 0x0, 0x0, 0x0, 0x0 ],
  "3": [ 0x1b, 0x1b, 0x1b, 0x0, 0x0, 0x0, 0x0 ],
  "4": [ 0x0, 0x0, 0x0, 0x0, 0x3, 0x3, 0x3 ],
  "5": [ 0x3, 0x3, 0x3, 0x0, 0x3, 0x3, 0x3 ],
  "6": [ 0x18, 0x18, 0x18, 0x0, 0x3, 0x3, 0x3 ],
  "7": [ 0x1b, 0x1b, 0x1b, 0x0, 0x3, 0x3, 0x3 ],
  "8": [ 0x0, 0x0, 0x0, 0x0, 0x18, 0x18, 0x18 ],
  "9": [ 0x3, 0x3, 0x3, 0x0, 0x18, 0x18, 0x18 ],
  "10": [ 0x18, 0x18, 0x18, 0x0, 0x18, 0x18, 0x18 ],
  "11": [ 0x1b, 0x1b, 0x1b, 0x0, 0x18, 0x18, 0x18 ],
  "12": [ 0x0, 0x0, 0x0, 0x0, 0x1b, 0x1b, 0x1b ],
  "13": [ 0x3, 0x3, 0x3, 0x0, 0x1b, 0x1b, 0x1b ],
  "14": [ 0x18, 0x18, 0x18, 0x0, 0x1b, 0x1b, 0x1b ],
  "15": [ 0x1b, 0x1b, 0x1b, 0x0, 0x1b, 0x1b, 0x1b ]
},
euro: [ 0x3, 0x4, 0x1e, 0x8, 0x1e, 0x8, 0x7 ],
cent: [ 0x0, 0x0, 0xe, 0x11, 0x10, 0x15, 0xe, 0x8 ],
speaker: [ 0x1, 0x3, 0xf, 0xf, 0xf, 0x3, 0x1 ],
sound: [ 0x8, 0x10, 0x0, 0x18, 0x0, 0x10, 0x8 ],
x: [ 0x0, 0x1b, 0xe, 0x4, 0xe, 0x1b, 0x0 ],
target: [ 0x0, 0xa, 0x11, 0x15, 0x11, 0xa, 0x0 ],
pointer: {
  right: [ 0x0, 0x8, 0xc, 0xe, 0xc, 0x8, 0x0 ],
  up: [ 0x0, 0x0, 0x4, 0xe, 0x1f, 0x0, 0x0 ],
  left: [ 0x0, 0x2, 0x6, 0xe, 0x6, 0x2, 0x0 ],
  down: [ 0x0, 0x0, 0x1f, 0xe, 0x4, 0x0, 0x0 ]
},
arrow: {
  ne: [ 0x0, 0xf, 0x3, 0x5, 0x9, 0x10, 0x0 ],
  nw: [ 0x0, 0x1e, 0x18, 0x14, 0x12, 0x1, 0x0 ],
  sw: [ 0x0, 0x1, 0x12, 0x14, 0x18, 0x1e, 0x0 ],
  se: [ 0x0, 0x10, 0x9, 0x5, 0x3, 0xf, 0x0 ]
},
dice: {
  "1": [ 0x0, 0x0, 0x0, 0x4, 0x0, 0x0, 0x0 ],
  "2": [ 0x0, 0x10, 0x0, 0x0, 0x0, 0x1, 0x0 ],
  "3": [ 0x0, 0x10, 0x0, 0x4, 0x0, 0x1, 0x0 ],
  "4": [ 0x0, 0x11, 0x0, 0x0, 0x0, 0x11, 0x0 ],
  "5": [ 0x0, 0x11, 0x0, 0x4, 0x0, 0x11, 0x0 ],
  "6": [ 0x0, 0x11, 0x0, 0x11, 0x0, 0x11, 0x0 ]
},
bell:     [ 0x4, 0xe, 0xe, 0xe, 0x1f, 0x0, 0x4 ],
smile:    [ 0x0, 0x0A, 0x0, 0x11, 0x0E, 0x0, 0x0 ],
note:     [ 0x2, 0x3, 0x2, 0xe, 0x1e, 0xc, 0x0 ],
clock:    [ 0x0, 0xe, 0x15, 0x17, 0x11, 0xe, 0x0 ],
heart:    [ 0x0, 0xa, 0x1f, 0x1f, 0xe, 0x4, 0x0 ],
duck:     [ 0x0, 0xc, 0x1d, 0xf, 0xf, 0x6, 0x0 ],
check:    [ 0x0, 0x1, 0x3, 0x16, 0x1c, 0x8, 0x0 ],
retarrow: [ 0x1, 0x1, 0x5, 0x9, 0x1f, 0x8, 0x4 ],
runninga:  [ 0x6, 0x6, 0x5, 0xE, 0x14, 0x4, 0xA, 0x11 ],
runningb:  [ 0x6, 0x6, 0x4, 0xE, 0xE, 0x4, 0xA, 0xA ]

};


var keys = Object.keys(parse),
    moved;


moved = keys.reduce(function( o, key ) {
  var prop = parse[ key ];

  if  ( !Array.isArray(prop) ) {
    Object.keys(prop).forEach(function( sub ) {
      o[ key + sub ] = prop[ sub ];
    });


  } else {
    o[ key ] = prop;
  }

  return o;
}, {});


console.log( moved );
