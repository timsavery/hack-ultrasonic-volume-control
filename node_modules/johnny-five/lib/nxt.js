var Board = require("../lib/board.js"),
    events = require("events"),
    util = require("util"),
    __ = require("../lib/fn.js");


var priv = new WeakMap(),
    Devices;


Devices = {
  "NXTMMX-v2": {
    address: 0x06,
    bytes: 16,



    setup: [
      // CRA
      [ 0x3, 0xFE ]
    ],
    preread: [
      [ 0x0 ]
    ]
  }
};



function NXT( opts ) {

  if ( !(this instanceof NXT) ) {
    return new NXT( opts );
  }

  var address, bytes, device, delay,
      last, properties, preread, read, setup;

  opts = Board.options( opts );

  // Hardware instance properties
  this.board = Board.mount( opts );
  this.firmata = this.board.firmata;

  device = Devices[ opts.device ];

  // Set up I2C data connection
  this.firmata.sendI2CConfig();


  //   // Set pointer to X most signficant byte
  //   this.firmata.sendI2CWriteRequest( address, preread );

  //   // Read from register
  //   this.firmata.sendI2CReadRequest( address, bytes, data.bind(this) );
  Object.defineProperties( this, {
    address: {
      value: device.address
    }
  });
}

NXT.prototype.read = function( start, bytes, callback ) {
  this.firmata.sendI2CReadRequest( this.address, bytes, callback );
};

NXT.prototype.write = function( start, byteArray ) {
  byteArray.unshift(start);
  this.firmata.sendI2CWriteRequest( this.address, byteArray );
};


// util.inherits( NXT, events.EventEmitter );

module.exports = NXT;
